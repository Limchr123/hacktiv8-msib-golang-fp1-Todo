definitions:
  dto.DeleteTodoByIdResponse:
    properties:
      message:
        type: string
      statusCode:
        type: integer
    type: object
  dto.GetAllTodoResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/dto.Todo'
        type: array
      message:
        type: string
      statusCode:
        type: integer
    type: object
  dto.GetTodoByIdResponse:
    properties:
      data:
        $ref: '#/definitions/dto.Todo'
      message:
        type: string
      statusCode:
        type: integer
    type: object
  dto.NewTodoResponse:
    properties:
      data:
        $ref: '#/definitions/dto.TodoResponse'
      message:
        type: string
      statusCode:
        type: integer
    type: object
  dto.Todo:
    properties:
      completed:
        type: boolean
      createdAt:
        type: string
      id:
        type: integer
      title:
        type: string
      updatedAt:
        type: string
    type: object
  dto.TodoRequest:
    properties:
      completed:
        type: boolean
      title:
        type: string
    type: object
  dto.TodoResponse:
    properties:
      completed:
        type: boolean
      title:
        type: string
    type: object
  dto.UpdateTodoByIdResponse:
    properties:
      data:
        $ref: '#/definitions/dto.Todo'
      message:
        type: string
      statusCode:
        type: integer
    type: object
  errs.MessageErrData:
    properties:
      errError:
        type: string
      errMessage:
        type: string
      errStatus:
        type: integer
    type: object
info:
  contact: {}
paths:
  /todos:
    get:
      consumes:
      - application/json
      description: Get All Todo List
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GetAllTodoResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errs.MessageErrData'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errs.MessageErrData'
      summary: List Todo
      tags:
      - todos
    post:
      consumes:
      - application/json
      description: Create Todo List
      parameters:
      - description: Create todo request body
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/dto.TodoRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.NewTodoResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errs.MessageErrData'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errs.MessageErrData'
      summary: Create Todo
      tags:
      - todos
  /todos/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an todo by id
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.DeleteTodoByIdResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errs.MessageErrData'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errs.MessageErrData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errs.MessageErrData'
      summary: Delete todo
      tags:
      - todos
    get:
      consumes:
      - application/json
      description: Get an todo list by id
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GetTodoByIdResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errs.MessageErrData'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errs.MessageErrData'
      summary: Find todos
      tags:
      - todos
    put:
      consumes:
      - application/json
      description: Update todo by id todo
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update order request body
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/dto.TodoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UpdateTodoByIdResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errs.MessageErrData'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errs.MessageErrData'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errs.MessageErrData'
      summary: Update Todo
      tags:
      - todos
swagger: "2.0"
